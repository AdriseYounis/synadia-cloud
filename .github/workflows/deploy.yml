name: Deploy to kube
on: [push]

jobs:
    deploy:
        runs-on: ubuntu-latest
        permissions: write-all

        steps:
        - uses: actions/checkout@v2

        - name: Install civo
          uses: civo/action-civo@v1.0.0
          with:
            token: ${{ secrets.CIVO_TOKEN }}
          env:
            ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

        - name: Create a k3s cluster
          run: >
            if [[ $(civo k3s show hello-world-demo -o custom -f ID) == "" ]]; then
                civo k3s create hello-world-demo -n 2 --wait
            fi    

        - name: Make config folder
          run: mkdir ~/.kube

        - name: Save our cluster's authentication details
          run: >
            civo k3s config hello-world-demo --save --local-path ~/.kube/config -y
    
        - name: Ensure we can connect to the API
          run: >
            i=0;
            while [ $i -le 120 ]; do
                kubectl get nodes && break;
                ((i++));
                sleep 1;
            done

        - name: Authenticate Kubernetes Cluster to Github Container Registry 
          run: >
            if ! kubectl get secret ghcr-login-secret | grep "ghcr-login-secret"; then
              kubectl create secret docker-registry ghcr-login-secret --docker-server=https://ghcr.io --docker-username=adriseyounis --docker-password=${{ secrets.GITHUB_TOKEN }} --docker-email=adriesyounis@gmail.com
            fi
        
        - name: Replace our cluster ID
          run: >
            sed -i'' -e "s/CLUSTER_ID/`civo k3s show hello-world-demo -o custom -f ID`/" k8s.yaml &&
            sed -i'' -e "s/CLUSTER_ID/`civo k3s show hello-world-demo -o custom -f ID`/" config.toml

        - name: Checkout Code
          uses: actions/checkout@v3
          with:
            ref: ${{ github.head_ref }}
            fetch-depth: 0   

        - name: Git Version
          id: version
          uses: codacy/git-version@2.7.1

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
            
        - name: Build & Push
          run: |
            docker build . --file ./deployment/Dockerfile --tag ghcr.io/adriseyounis/hello-world-demo:${{ steps.version.outputs.version }}
            docker push ghcr.io/adriseyounis/hello-world-demo:${{ steps.version.outputs.version }}

        - name: Deploy our app to the cluster
          run: kubectl apply -f k8s.yaml

        - name: Wait for the deployment to be ready
          run: >
            i=0;
            while [ $i -le 120 ]; do
              kubectl rollout status deployment/hello-world-demo | grep "successfully rolled out" && break;
              ((i++));
              sleep 1;
            done

        - name: Update application
          run: kubectl patch deployment hello-world-demo -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
      